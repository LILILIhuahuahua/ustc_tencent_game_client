// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: notify.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from notify.proto</summary>
public static partial class NotifyReflection {

  #region Descriptor
  /// <summary>File descriptor for notify.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static NotifyReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "Cgxub3RpZnkucHJvdG8aDW1zZ2VudW0ucHJvdG8aDHN0cnVjdC5wcm90byKs",
          "AQoGTm90aWZ5EjcKFmVudGl0eUluZm9DaGFuZ2VOb3RpZnkYASABKAsyFy5F",
          "bnRpdHlJbmZvQ2hhbmdlTm90aWZ5EjMKFGdhbWVHbG9iYWxJbmZvTm90aWZ5",
          "GAIgASgLMhUuR2FtZUdsb2JhbEluZm9Ob3RpZnkSGQoEdGltZRgDIAEoCzIL",
          "LlRpbWVOb3RpZnkSGQoHbWFwSW5mbxgEIAEoCzIILk1hcEluZm8iggEKFkVu",
          "dGl0eUluZm9DaGFuZ2VOb3RpZnkSIAoKZW50aXR5VHlwZRgBIAEoDjIMLkVO",
          "VElUWV9UWVBFEhAKCGVudGl0eUlkGAIgASgFEhkKB0hlcm9Nc2cYAyABKAsy",
          "CC5IZXJvTXNnEhkKB2l0ZW1Nc2cYBCABKAsyCC5JdGVtTXNnIocBChRHYW1l",
          "R2xvYmFsSW5mb05vdGlmeRISCgpoZXJvTnVtYmVyGAEgASgFEgwKBHRpbWUY",
          "AiABKAMSGQoHSGVyb01zZxgDIAMoCzIILkhlcm9Nc2cSGQoHSXRlbU1zZxgE",
          "IAMoCzIILkl0ZW1Nc2cSFwoGbWFwTXNnGAUgASgLMgcuTWFwTXNnIhoKClRp",
          "bWVOb3RpZnkSDAoEdGltZRgBIAEoAyIiCgdNYXBJbmZvEhcKBm1hcE1zZxgB",
          "IAEoCzIHLk1hcE1zZ2IGcHJvdG8z"));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { global::MsgenumReflection.Descriptor, global::StructReflection.Descriptor, },
        new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::Notify), global::Notify.Parser, new[]{ "EntityInfoChangeNotify", "GameGlobalInfoNotify", "Time", "MapInfo" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::EntityInfoChangeNotify), global::EntityInfoChangeNotify.Parser, new[]{ "EntityType", "EntityId", "HeroMsg", "ItemMsg" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GameGlobalInfoNotify), global::GameGlobalInfoNotify.Parser, new[]{ "HeroNumber", "Time", "HeroMsg", "ItemMsg", "MapMsg" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::TimeNotify), global::TimeNotify.Parser, new[]{ "Time" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MapInfo), global::MapInfo.Parser, new[]{ "MapMsg" }, null, null, null, null)
        }));
  }
  #endregion

}
#region Messages
public sealed partial class Notify : pb::IMessage<Notify> {
  private static readonly pb::MessageParser<Notify> _parser = new pb::MessageParser<Notify>(() => new Notify());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<Notify> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::NotifyReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Notify() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Notify(Notify other) : this() {
    entityInfoChangeNotify_ = other.entityInfoChangeNotify_ != null ? other.entityInfoChangeNotify_.Clone() : null;
    gameGlobalInfoNotify_ = other.gameGlobalInfoNotify_ != null ? other.gameGlobalInfoNotify_.Clone() : null;
    time_ = other.time_ != null ? other.time_.Clone() : null;
    mapInfo_ = other.mapInfo_ != null ? other.mapInfo_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Notify Clone() {
    return new Notify(this);
  }

  /// <summary>Field number for the "entityInfoChangeNotify" field.</summary>
  public const int EntityInfoChangeNotifyFieldNumber = 1;
  private global::EntityInfoChangeNotify entityInfoChangeNotify_;
  /// <summary>
  ///实体的属性变化通知
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::EntityInfoChangeNotify EntityInfoChangeNotify {
    get { return entityInfoChangeNotify_; }
    set {
      entityInfoChangeNotify_ = value;
    }
  }

  /// <summary>Field number for the "gameGlobalInfoNotify" field.</summary>
  public const int GameGlobalInfoNotifyFieldNumber = 2;
  private global::GameGlobalInfoNotify gameGlobalInfoNotify_;
  /// <summary>
  ///玩家加入时对玩家进行同步的所有消息
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GameGlobalInfoNotify GameGlobalInfoNotify {
    get { return gameGlobalInfoNotify_; }
    set {
      gameGlobalInfoNotify_ = value;
    }
  }

  /// <summary>Field number for the "time" field.</summary>
  public const int TimeFieldNumber = 3;
  private global::TimeNotify time_;
  /// <summary>
  ///对局时间信息通知
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::TimeNotify Time {
    get { return time_; }
    set {
      time_ = value;
    }
  }

  /// <summary>Field number for the "mapInfo" field.</summary>
  public const int MapInfoFieldNumber = 4;
  private global::MapInfo mapInfo_;
  /// <summary>
  ///地图信息
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::MapInfo MapInfo {
    get { return mapInfo_; }
    set {
      mapInfo_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as Notify);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(Notify other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(EntityInfoChangeNotify, other.EntityInfoChangeNotify)) return false;
    if (!object.Equals(GameGlobalInfoNotify, other.GameGlobalInfoNotify)) return false;
    if (!object.Equals(Time, other.Time)) return false;
    if (!object.Equals(MapInfo, other.MapInfo)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (entityInfoChangeNotify_ != null) hash ^= EntityInfoChangeNotify.GetHashCode();
    if (gameGlobalInfoNotify_ != null) hash ^= GameGlobalInfoNotify.GetHashCode();
    if (time_ != null) hash ^= Time.GetHashCode();
    if (mapInfo_ != null) hash ^= MapInfo.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (entityInfoChangeNotify_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(EntityInfoChangeNotify);
    }
    if (gameGlobalInfoNotify_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(GameGlobalInfoNotify);
    }
    if (time_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(Time);
    }
    if (mapInfo_ != null) {
      output.WriteRawTag(34);
      output.WriteMessage(MapInfo);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (entityInfoChangeNotify_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(EntityInfoChangeNotify);
    }
    if (gameGlobalInfoNotify_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GameGlobalInfoNotify);
    }
    if (time_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Time);
    }
    if (mapInfo_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(MapInfo);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(Notify other) {
    if (other == null) {
      return;
    }
    if (other.entityInfoChangeNotify_ != null) {
      if (entityInfoChangeNotify_ == null) {
        EntityInfoChangeNotify = new global::EntityInfoChangeNotify();
      }
      EntityInfoChangeNotify.MergeFrom(other.EntityInfoChangeNotify);
    }
    if (other.gameGlobalInfoNotify_ != null) {
      if (gameGlobalInfoNotify_ == null) {
        GameGlobalInfoNotify = new global::GameGlobalInfoNotify();
      }
      GameGlobalInfoNotify.MergeFrom(other.GameGlobalInfoNotify);
    }
    if (other.time_ != null) {
      if (time_ == null) {
        Time = new global::TimeNotify();
      }
      Time.MergeFrom(other.Time);
    }
    if (other.mapInfo_ != null) {
      if (mapInfo_ == null) {
        MapInfo = new global::MapInfo();
      }
      MapInfo.MergeFrom(other.MapInfo);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (entityInfoChangeNotify_ == null) {
            EntityInfoChangeNotify = new global::EntityInfoChangeNotify();
          }
          input.ReadMessage(EntityInfoChangeNotify);
          break;
        }
        case 18: {
          if (gameGlobalInfoNotify_ == null) {
            GameGlobalInfoNotify = new global::GameGlobalInfoNotify();
          }
          input.ReadMessage(GameGlobalInfoNotify);
          break;
        }
        case 26: {
          if (time_ == null) {
            Time = new global::TimeNotify();
          }
          input.ReadMessage(Time);
          break;
        }
        case 34: {
          if (mapInfo_ == null) {
            MapInfo = new global::MapInfo();
          }
          input.ReadMessage(MapInfo);
          break;
        }
      }
    }
  }

}

public sealed partial class EntityInfoChangeNotify : pb::IMessage<EntityInfoChangeNotify> {
  private static readonly pb::MessageParser<EntityInfoChangeNotify> _parser = new pb::MessageParser<EntityInfoChangeNotify>(() => new EntityInfoChangeNotify());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<EntityInfoChangeNotify> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::NotifyReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public EntityInfoChangeNotify() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public EntityInfoChangeNotify(EntityInfoChangeNotify other) : this() {
    entityType_ = other.entityType_;
    entityId_ = other.entityId_;
    heroMsg_ = other.heroMsg_ != null ? other.heroMsg_.Clone() : null;
    itemMsg_ = other.itemMsg_ != null ? other.itemMsg_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public EntityInfoChangeNotify Clone() {
    return new EntityInfoChangeNotify(this);
  }

  /// <summary>Field number for the "entityType" field.</summary>
  public const int EntityTypeFieldNumber = 1;
  private global::ENTITY_TYPE entityType_ = global::ENTITY_TYPE.HeroType;
  /// <summary>
  ///实体的类型
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::ENTITY_TYPE EntityType {
    get { return entityType_; }
    set {
      entityType_ = value;
    }
  }

  /// <summary>Field number for the "entityId" field.</summary>
  public const int EntityIdFieldNumber = 2;
  private int entityId_;
  /// <summary>
  ///实体的Id
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int EntityId {
    get { return entityId_; }
    set {
      entityId_ = value;
    }
  }

  /// <summary>Field number for the "HeroMsg" field.</summary>
  public const int HeroMsgFieldNumber = 3;
  private global::HeroMsg heroMsg_;
  /// <summary>
  ///玩家的信息
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::HeroMsg HeroMsg {
    get { return heroMsg_; }
    set {
      heroMsg_ = value;
    }
  }

  /// <summary>Field number for the "itemMsg" field.</summary>
  public const int ItemMsgFieldNumber = 4;
  private global::ItemMsg itemMsg_;
  /// <summary>
  ///物体的信息
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::ItemMsg ItemMsg {
    get { return itemMsg_; }
    set {
      itemMsg_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as EntityInfoChangeNotify);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(EntityInfoChangeNotify other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (EntityType != other.EntityType) return false;
    if (EntityId != other.EntityId) return false;
    if (!object.Equals(HeroMsg, other.HeroMsg)) return false;
    if (!object.Equals(ItemMsg, other.ItemMsg)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (EntityType != global::ENTITY_TYPE.HeroType) hash ^= EntityType.GetHashCode();
    if (EntityId != 0) hash ^= EntityId.GetHashCode();
    if (heroMsg_ != null) hash ^= HeroMsg.GetHashCode();
    if (itemMsg_ != null) hash ^= ItemMsg.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (EntityType != global::ENTITY_TYPE.HeroType) {
      output.WriteRawTag(8);
      output.WriteEnum((int) EntityType);
    }
    if (EntityId != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(EntityId);
    }
    if (heroMsg_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(HeroMsg);
    }
    if (itemMsg_ != null) {
      output.WriteRawTag(34);
      output.WriteMessage(ItemMsg);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (EntityType != global::ENTITY_TYPE.HeroType) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) EntityType);
    }
    if (EntityId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(EntityId);
    }
    if (heroMsg_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(HeroMsg);
    }
    if (itemMsg_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(ItemMsg);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(EntityInfoChangeNotify other) {
    if (other == null) {
      return;
    }
    if (other.EntityType != global::ENTITY_TYPE.HeroType) {
      EntityType = other.EntityType;
    }
    if (other.EntityId != 0) {
      EntityId = other.EntityId;
    }
    if (other.heroMsg_ != null) {
      if (heroMsg_ == null) {
        HeroMsg = new global::HeroMsg();
      }
      HeroMsg.MergeFrom(other.HeroMsg);
    }
    if (other.itemMsg_ != null) {
      if (itemMsg_ == null) {
        ItemMsg = new global::ItemMsg();
      }
      ItemMsg.MergeFrom(other.ItemMsg);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          EntityType = (global::ENTITY_TYPE) input.ReadEnum();
          break;
        }
        case 16: {
          EntityId = input.ReadInt32();
          break;
        }
        case 26: {
          if (heroMsg_ == null) {
            HeroMsg = new global::HeroMsg();
          }
          input.ReadMessage(HeroMsg);
          break;
        }
        case 34: {
          if (itemMsg_ == null) {
            ItemMsg = new global::ItemMsg();
          }
          input.ReadMessage(ItemMsg);
          break;
        }
      }
    }
  }

}

public sealed partial class GameGlobalInfoNotify : pb::IMessage<GameGlobalInfoNotify> {
  private static readonly pb::MessageParser<GameGlobalInfoNotify> _parser = new pb::MessageParser<GameGlobalInfoNotify>(() => new GameGlobalInfoNotify());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GameGlobalInfoNotify> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::NotifyReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GameGlobalInfoNotify() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GameGlobalInfoNotify(GameGlobalInfoNotify other) : this() {
    heroNumber_ = other.heroNumber_;
    time_ = other.time_;
    heroMsg_ = other.heroMsg_.Clone();
    itemMsg_ = other.itemMsg_.Clone();
    mapMsg_ = other.mapMsg_ != null ? other.mapMsg_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GameGlobalInfoNotify Clone() {
    return new GameGlobalInfoNotify(this);
  }

  /// <summary>Field number for the "heroNumber" field.</summary>
  public const int HeroNumberFieldNumber = 1;
  private int heroNumber_;
  /// <summary>
  ///玩家数量
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int HeroNumber {
    get { return heroNumber_; }
    set {
      heroNumber_ = value;
    }
  }

  /// <summary>Field number for the "time" field.</summary>
  public const int TimeFieldNumber = 2;
  private long time_;
  /// <summary>
  ///游戏对局中的时间(开始时间)
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long Time {
    get { return time_; }
    set {
      time_ = value;
    }
  }

  /// <summary>Field number for the "HeroMsg" field.</summary>
  public const int HeroMsgFieldNumber = 3;
  private static readonly pb::FieldCodec<global::HeroMsg> _repeated_heroMsg_codec
      = pb::FieldCodec.ForMessage(26, global::HeroMsg.Parser);
  private readonly pbc::RepeatedField<global::HeroMsg> heroMsg_ = new pbc::RepeatedField<global::HeroMsg>();
  /// <summary>
  ///对局中玩家的信息
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::HeroMsg> HeroMsg {
    get { return heroMsg_; }
  }

  /// <summary>Field number for the "ItemMsg" field.</summary>
  public const int ItemMsgFieldNumber = 4;
  private static readonly pb::FieldCodec<global::ItemMsg> _repeated_itemMsg_codec
      = pb::FieldCodec.ForMessage(34, global::ItemMsg.Parser);
  private readonly pbc::RepeatedField<global::ItemMsg> itemMsg_ = new pbc::RepeatedField<global::ItemMsg>();
  /// <summary>
  ///对局中道具的信息
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::ItemMsg> ItemMsg {
    get { return itemMsg_; }
  }

  /// <summary>Field number for the "mapMsg" field.</summary>
  public const int MapMsgFieldNumber = 5;
  private global::MapMsg mapMsg_;
  /// <summary>
  ///地图信息
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::MapMsg MapMsg {
    get { return mapMsg_; }
    set {
      mapMsg_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GameGlobalInfoNotify);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GameGlobalInfoNotify other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (HeroNumber != other.HeroNumber) return false;
    if (Time != other.Time) return false;
    if(!heroMsg_.Equals(other.heroMsg_)) return false;
    if(!itemMsg_.Equals(other.itemMsg_)) return false;
    if (!object.Equals(MapMsg, other.MapMsg)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (HeroNumber != 0) hash ^= HeroNumber.GetHashCode();
    if (Time != 0L) hash ^= Time.GetHashCode();
    hash ^= heroMsg_.GetHashCode();
    hash ^= itemMsg_.GetHashCode();
    if (mapMsg_ != null) hash ^= MapMsg.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (HeroNumber != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(HeroNumber);
    }
    if (Time != 0L) {
      output.WriteRawTag(16);
      output.WriteInt64(Time);
    }
    heroMsg_.WriteTo(output, _repeated_heroMsg_codec);
    itemMsg_.WriteTo(output, _repeated_itemMsg_codec);
    if (mapMsg_ != null) {
      output.WriteRawTag(42);
      output.WriteMessage(MapMsg);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (HeroNumber != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(HeroNumber);
    }
    if (Time != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(Time);
    }
    size += heroMsg_.CalculateSize(_repeated_heroMsg_codec);
    size += itemMsg_.CalculateSize(_repeated_itemMsg_codec);
    if (mapMsg_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(MapMsg);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GameGlobalInfoNotify other) {
    if (other == null) {
      return;
    }
    if (other.HeroNumber != 0) {
      HeroNumber = other.HeroNumber;
    }
    if (other.Time != 0L) {
      Time = other.Time;
    }
    heroMsg_.Add(other.heroMsg_);
    itemMsg_.Add(other.itemMsg_);
    if (other.mapMsg_ != null) {
      if (mapMsg_ == null) {
        MapMsg = new global::MapMsg();
      }
      MapMsg.MergeFrom(other.MapMsg);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          HeroNumber = input.ReadInt32();
          break;
        }
        case 16: {
          Time = input.ReadInt64();
          break;
        }
        case 26: {
          heroMsg_.AddEntriesFrom(input, _repeated_heroMsg_codec);
          break;
        }
        case 34: {
          itemMsg_.AddEntriesFrom(input, _repeated_itemMsg_codec);
          break;
        }
        case 42: {
          if (mapMsg_ == null) {
            MapMsg = new global::MapMsg();
          }
          input.ReadMessage(MapMsg);
          break;
        }
      }
    }
  }

}

/// <summary>
///对局时间信息通知
/// </summary>
public sealed partial class TimeNotify : pb::IMessage<TimeNotify> {
  private static readonly pb::MessageParser<TimeNotify> _parser = new pb::MessageParser<TimeNotify>(() => new TimeNotify());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<TimeNotify> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::NotifyReflection.Descriptor.MessageTypes[3]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public TimeNotify() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public TimeNotify(TimeNotify other) : this() {
    time_ = other.time_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public TimeNotify Clone() {
    return new TimeNotify(this);
  }

  /// <summary>Field number for the "time" field.</summary>
  public const int TimeFieldNumber = 1;
  private long time_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long Time {
    get { return time_; }
    set {
      time_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as TimeNotify);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(TimeNotify other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Time != other.Time) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Time != 0L) hash ^= Time.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Time != 0L) {
      output.WriteRawTag(8);
      output.WriteInt64(Time);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Time != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(Time);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(TimeNotify other) {
    if (other == null) {
      return;
    }
    if (other.Time != 0L) {
      Time = other.Time;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Time = input.ReadInt64();
          break;
        }
      }
    }
  }

}

public sealed partial class MapInfo : pb::IMessage<MapInfo> {
  private static readonly pb::MessageParser<MapInfo> _parser = new pb::MessageParser<MapInfo>(() => new MapInfo());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MapInfo> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::NotifyReflection.Descriptor.MessageTypes[4]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MapInfo() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MapInfo(MapInfo other) : this() {
    mapMsg_ = other.mapMsg_ != null ? other.mapMsg_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MapInfo Clone() {
    return new MapInfo(this);
  }

  /// <summary>Field number for the "mapMsg" field.</summary>
  public const int MapMsgFieldNumber = 1;
  private global::MapMsg mapMsg_;
  /// <summary>
  ///地图信息
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::MapMsg MapMsg {
    get { return mapMsg_; }
    set {
      mapMsg_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MapInfo);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MapInfo other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(MapMsg, other.MapMsg)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (mapMsg_ != null) hash ^= MapMsg.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (mapMsg_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(MapMsg);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (mapMsg_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(MapMsg);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MapInfo other) {
    if (other == null) {
      return;
    }
    if (other.mapMsg_ != null) {
      if (mapMsg_ == null) {
        MapMsg = new global::MapMsg();
      }
      MapMsg.MergeFrom(other.MapMsg);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (mapMsg_ == null) {
            MapMsg = new global::MapMsg();
          }
          input.ReadMessage(MapMsg);
          break;
        }
      }
    }
  }

}

#endregion


#endregion Designer generated code
