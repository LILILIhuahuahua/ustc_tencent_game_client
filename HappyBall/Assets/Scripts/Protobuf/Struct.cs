// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: struct.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from struct.proto</summary>
public static partial class StructReflection {

  #region Descriptor
  /// <summary>File descriptor for struct.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static StructReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "CgxzdHJ1Y3QucHJvdG8aDW1zZ2VudW0ucHJvdG8iqwEKB0hlcm9Nc2cSDgoG",
          "aGVyb0lkGAEgASgFEiMKDGhlcm9Qb3NpdGlvbhgCIAEoCzINLkNvb3JkaW5h",
          "dGVYWRIRCgloZXJvU3BlZWQYAyABKAISEAoIaGVyb1NpemUYBCABKAISJAoN",
          "aGVyb0RpcmVjdGlvbhgFIAEoCzINLkNvb3JkaW5hdGVYWRIgCgpoZXJvU3Rh",
          "dHVzGAYgASgOMgwuSEVST19TVEFUVVMiXgoHSXRlbU1zZxIOCgZJdGVtSWQY",
          "ASABKAUSHgoISXRlbVR5cGUYAiABKA4yDC5FTlRJVFlfVFlQRRIjCgxJdGVt",
          "UG9zaXRpb24YAyABKAsyDS5Db29yZGluYXRlWFkiQAoGTWFwTXNnEgwKBFhN",
          "aW4YASABKAISDAoEWE1heBgCIAEoAhIMCgRZTWluGAMgASgCEgwKBFlNYXgY",
          "BCABKAIiOAoMQ29vcmRpbmF0ZVhZEhMKC2Nvb3JkaW5hdGVYGAEgASgCEhMK",
          "C2Nvb3JkaW5hdGVZGAIgASgCYgZwcm90bzM="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { global::MsgenumReflection.Descriptor, },
        new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::HeroMsg), global::HeroMsg.Parser, new[]{ "HeroId", "HeroPosition", "HeroSpeed", "HeroSize", "HeroDirection", "HeroStatus" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ItemMsg), global::ItemMsg.Parser, new[]{ "ItemId", "ItemType", "ItemPosition" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MapMsg), global::MapMsg.Parser, new[]{ "XMin", "XMax", "YMin", "YMax" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CoordinateXY), global::CoordinateXY.Parser, new[]{ "CoordinateX", "CoordinateY" }, null, null, null, null)
        }));
  }
  #endregion

}
#region Messages
public sealed partial class HeroMsg : pb::IMessage<HeroMsg> {
  private static readonly pb::MessageParser<HeroMsg> _parser = new pb::MessageParser<HeroMsg>(() => new HeroMsg());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<HeroMsg> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::StructReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public HeroMsg() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public HeroMsg(HeroMsg other) : this() {
    heroId_ = other.heroId_;
    heroPosition_ = other.heroPosition_ != null ? other.heroPosition_.Clone() : null;
    heroSpeed_ = other.heroSpeed_;
    heroSize_ = other.heroSize_;
    heroDirection_ = other.heroDirection_ != null ? other.heroDirection_.Clone() : null;
    heroStatus_ = other.heroStatus_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public HeroMsg Clone() {
    return new HeroMsg(this);
  }

  /// <summary>Field number for the "heroId" field.</summary>
  public const int HeroIdFieldNumber = 1;
  private int heroId_;
  /// <summary>
  ///玩家的ID
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int HeroId {
    get { return heroId_; }
    set {
      heroId_ = value;
    }
  }

  /// <summary>Field number for the "heroPosition" field.</summary>
  public const int HeroPositionFieldNumber = 2;
  private global::CoordinateXY heroPosition_;
  /// <summary>
  ///玩家的坐标
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::CoordinateXY HeroPosition {
    get { return heroPosition_; }
    set {
      heroPosition_ = value;
    }
  }

  /// <summary>Field number for the "heroSpeed" field.</summary>
  public const int HeroSpeedFieldNumber = 3;
  private float heroSpeed_;
  /// <summary>
  ///玩家的速度
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public float HeroSpeed {
    get { return heroSpeed_; }
    set {
      heroSpeed_ = value;
    }
  }

  /// <summary>Field number for the "heroSize" field.</summary>
  public const int HeroSizeFieldNumber = 4;
  private float heroSize_;
  /// <summary>
  ///玩家的大小
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public float HeroSize {
    get { return heroSize_; }
    set {
      heroSize_ = value;
    }
  }

  /// <summary>Field number for the "heroDirection" field.</summary>
  public const int HeroDirectionFieldNumber = 5;
  private global::CoordinateXY heroDirection_;
  /// <summary>
  ///玩家的行进方向
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::CoordinateXY HeroDirection {
    get { return heroDirection_; }
    set {
      heroDirection_ = value;
    }
  }

  /// <summary>Field number for the "heroStatus" field.</summary>
  public const int HeroStatusFieldNumber = 6;
  private global::HERO_STATUS heroStatus_ = global::HERO_STATUS.Live;
  /// <summary>
  ///玩家的状态
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::HERO_STATUS HeroStatus {
    get { return heroStatus_; }
    set {
      heroStatus_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as HeroMsg);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(HeroMsg other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (HeroId != other.HeroId) return false;
    if (!object.Equals(HeroPosition, other.HeroPosition)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(HeroSpeed, other.HeroSpeed)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(HeroSize, other.HeroSize)) return false;
    if (!object.Equals(HeroDirection, other.HeroDirection)) return false;
    if (HeroStatus != other.HeroStatus) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (HeroId != 0) hash ^= HeroId.GetHashCode();
    if (heroPosition_ != null) hash ^= HeroPosition.GetHashCode();
    if (HeroSpeed != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(HeroSpeed);
    if (HeroSize != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(HeroSize);
    if (heroDirection_ != null) hash ^= HeroDirection.GetHashCode();
    if (HeroStatus != global::HERO_STATUS.Live) hash ^= HeroStatus.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (HeroId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(HeroId);
    }
    if (heroPosition_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(HeroPosition);
    }
    if (HeroSpeed != 0F) {
      output.WriteRawTag(29);
      output.WriteFloat(HeroSpeed);
    }
    if (HeroSize != 0F) {
      output.WriteRawTag(37);
      output.WriteFloat(HeroSize);
    }
    if (heroDirection_ != null) {
      output.WriteRawTag(42);
      output.WriteMessage(HeroDirection);
    }
    if (HeroStatus != global::HERO_STATUS.Live) {
      output.WriteRawTag(48);
      output.WriteEnum((int) HeroStatus);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (HeroId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(HeroId);
    }
    if (heroPosition_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(HeroPosition);
    }
    if (HeroSpeed != 0F) {
      size += 1 + 4;
    }
    if (HeroSize != 0F) {
      size += 1 + 4;
    }
    if (heroDirection_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(HeroDirection);
    }
    if (HeroStatus != global::HERO_STATUS.Live) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) HeroStatus);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(HeroMsg other) {
    if (other == null) {
      return;
    }
    if (other.HeroId != 0) {
      HeroId = other.HeroId;
    }
    if (other.heroPosition_ != null) {
      if (heroPosition_ == null) {
        HeroPosition = new global::CoordinateXY();
      }
      HeroPosition.MergeFrom(other.HeroPosition);
    }
    if (other.HeroSpeed != 0F) {
      HeroSpeed = other.HeroSpeed;
    }
    if (other.HeroSize != 0F) {
      HeroSize = other.HeroSize;
    }
    if (other.heroDirection_ != null) {
      if (heroDirection_ == null) {
        HeroDirection = new global::CoordinateXY();
      }
      HeroDirection.MergeFrom(other.HeroDirection);
    }
    if (other.HeroStatus != global::HERO_STATUS.Live) {
      HeroStatus = other.HeroStatus;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          HeroId = input.ReadInt32();
          break;
        }
        case 18: {
          if (heroPosition_ == null) {
            HeroPosition = new global::CoordinateXY();
          }
          input.ReadMessage(HeroPosition);
          break;
        }
        case 29: {
          HeroSpeed = input.ReadFloat();
          break;
        }
        case 37: {
          HeroSize = input.ReadFloat();
          break;
        }
        case 42: {
          if (heroDirection_ == null) {
            HeroDirection = new global::CoordinateXY();
          }
          input.ReadMessage(HeroDirection);
          break;
        }
        case 48: {
          HeroStatus = (global::HERO_STATUS) input.ReadEnum();
          break;
        }
      }
    }
  }

}

public sealed partial class ItemMsg : pb::IMessage<ItemMsg> {
  private static readonly pb::MessageParser<ItemMsg> _parser = new pb::MessageParser<ItemMsg>(() => new ItemMsg());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ItemMsg> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::StructReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ItemMsg() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ItemMsg(ItemMsg other) : this() {
    itemId_ = other.itemId_;
    itemType_ = other.itemType_;
    itemPosition_ = other.itemPosition_ != null ? other.itemPosition_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ItemMsg Clone() {
    return new ItemMsg(this);
  }

  /// <summary>Field number for the "ItemId" field.</summary>
  public const int ItemIdFieldNumber = 1;
  private int itemId_;
  /// <summary>
  ///Item的Id
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ItemId {
    get { return itemId_; }
    set {
      itemId_ = value;
    }
  }

  /// <summary>Field number for the "ItemType" field.</summary>
  public const int ItemTypeFieldNumber = 2;
  private global::ENTITY_TYPE itemType_ = global::ENTITY_TYPE.HeroType;
  /// <summary>
  ///Item的类型
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::ENTITY_TYPE ItemType {
    get { return itemType_; }
    set {
      itemType_ = value;
    }
  }

  /// <summary>Field number for the "ItemPosition" field.</summary>
  public const int ItemPositionFieldNumber = 3;
  private global::CoordinateXY itemPosition_;
  /// <summary>
  ///Item的初始坐标
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::CoordinateXY ItemPosition {
    get { return itemPosition_; }
    set {
      itemPosition_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ItemMsg);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ItemMsg other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ItemId != other.ItemId) return false;
    if (ItemType != other.ItemType) return false;
    if (!object.Equals(ItemPosition, other.ItemPosition)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ItemId != 0) hash ^= ItemId.GetHashCode();
    if (ItemType != global::ENTITY_TYPE.HeroType) hash ^= ItemType.GetHashCode();
    if (itemPosition_ != null) hash ^= ItemPosition.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (ItemId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(ItemId);
    }
    if (ItemType != global::ENTITY_TYPE.HeroType) {
      output.WriteRawTag(16);
      output.WriteEnum((int) ItemType);
    }
    if (itemPosition_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(ItemPosition);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ItemId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ItemId);
    }
    if (ItemType != global::ENTITY_TYPE.HeroType) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ItemType);
    }
    if (itemPosition_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(ItemPosition);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ItemMsg other) {
    if (other == null) {
      return;
    }
    if (other.ItemId != 0) {
      ItemId = other.ItemId;
    }
    if (other.ItemType != global::ENTITY_TYPE.HeroType) {
      ItemType = other.ItemType;
    }
    if (other.itemPosition_ != null) {
      if (itemPosition_ == null) {
        ItemPosition = new global::CoordinateXY();
      }
      ItemPosition.MergeFrom(other.ItemPosition);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          ItemId = input.ReadInt32();
          break;
        }
        case 16: {
          ItemType = (global::ENTITY_TYPE) input.ReadEnum();
          break;
        }
        case 26: {
          if (itemPosition_ == null) {
            ItemPosition = new global::CoordinateXY();
          }
          input.ReadMessage(ItemPosition);
          break;
        }
      }
    }
  }

}

public sealed partial class MapMsg : pb::IMessage<MapMsg> {
  private static readonly pb::MessageParser<MapMsg> _parser = new pb::MessageParser<MapMsg>(() => new MapMsg());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MapMsg> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::StructReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MapMsg() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MapMsg(MapMsg other) : this() {
    xMin_ = other.xMin_;
    xMax_ = other.xMax_;
    yMin_ = other.yMin_;
    yMax_ = other.yMax_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MapMsg Clone() {
    return new MapMsg(this);
  }

  /// <summary>Field number for the "XMin" field.</summary>
  public const int XMinFieldNumber = 1;
  private float xMin_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public float XMin {
    get { return xMin_; }
    set {
      xMin_ = value;
    }
  }

  /// <summary>Field number for the "XMax" field.</summary>
  public const int XMaxFieldNumber = 2;
  private float xMax_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public float XMax {
    get { return xMax_; }
    set {
      xMax_ = value;
    }
  }

  /// <summary>Field number for the "YMin" field.</summary>
  public const int YMinFieldNumber = 3;
  private float yMin_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public float YMin {
    get { return yMin_; }
    set {
      yMin_ = value;
    }
  }

  /// <summary>Field number for the "YMax" field.</summary>
  public const int YMaxFieldNumber = 4;
  private float yMax_;
  /// <summary>
  ///四个边界
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public float YMax {
    get { return yMax_; }
    set {
      yMax_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MapMsg);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MapMsg other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(XMin, other.XMin)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(XMax, other.XMax)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(YMin, other.YMin)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(YMax, other.YMax)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (XMin != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(XMin);
    if (XMax != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(XMax);
    if (YMin != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(YMin);
    if (YMax != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(YMax);
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (XMin != 0F) {
      output.WriteRawTag(13);
      output.WriteFloat(XMin);
    }
    if (XMax != 0F) {
      output.WriteRawTag(21);
      output.WriteFloat(XMax);
    }
    if (YMin != 0F) {
      output.WriteRawTag(29);
      output.WriteFloat(YMin);
    }
    if (YMax != 0F) {
      output.WriteRawTag(37);
      output.WriteFloat(YMax);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (XMin != 0F) {
      size += 1 + 4;
    }
    if (XMax != 0F) {
      size += 1 + 4;
    }
    if (YMin != 0F) {
      size += 1 + 4;
    }
    if (YMax != 0F) {
      size += 1 + 4;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MapMsg other) {
    if (other == null) {
      return;
    }
    if (other.XMin != 0F) {
      XMin = other.XMin;
    }
    if (other.XMax != 0F) {
      XMax = other.XMax;
    }
    if (other.YMin != 0F) {
      YMin = other.YMin;
    }
    if (other.YMax != 0F) {
      YMax = other.YMax;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 13: {
          XMin = input.ReadFloat();
          break;
        }
        case 21: {
          XMax = input.ReadFloat();
          break;
        }
        case 29: {
          YMin = input.ReadFloat();
          break;
        }
        case 37: {
          YMax = input.ReadFloat();
          break;
        }
      }
    }
  }

}

/// <summary>
///坐标点
/// </summary>
public sealed partial class CoordinateXY : pb::IMessage<CoordinateXY> {
  private static readonly pb::MessageParser<CoordinateXY> _parser = new pb::MessageParser<CoordinateXY>(() => new CoordinateXY());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CoordinateXY> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::StructReflection.Descriptor.MessageTypes[3]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CoordinateXY() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CoordinateXY(CoordinateXY other) : this() {
    coordinateX_ = other.coordinateX_;
    coordinateY_ = other.coordinateY_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CoordinateXY Clone() {
    return new CoordinateXY(this);
  }

  /// <summary>Field number for the "coordinateX" field.</summary>
  public const int CoordinateXFieldNumber = 1;
  private float coordinateX_;
  /// <summary>
  ///横坐标
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public float CoordinateX {
    get { return coordinateX_; }
    set {
      coordinateX_ = value;
    }
  }

  /// <summary>Field number for the "coordinateY" field.</summary>
  public const int CoordinateYFieldNumber = 2;
  private float coordinateY_;
  /// <summary>
  ///纵坐标
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public float CoordinateY {
    get { return coordinateY_; }
    set {
      coordinateY_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CoordinateXY);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CoordinateXY other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(CoordinateX, other.CoordinateX)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(CoordinateY, other.CoordinateY)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (CoordinateX != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(CoordinateX);
    if (CoordinateY != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(CoordinateY);
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (CoordinateX != 0F) {
      output.WriteRawTag(13);
      output.WriteFloat(CoordinateX);
    }
    if (CoordinateY != 0F) {
      output.WriteRawTag(21);
      output.WriteFloat(CoordinateY);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (CoordinateX != 0F) {
      size += 1 + 4;
    }
    if (CoordinateY != 0F) {
      size += 1 + 4;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CoordinateXY other) {
    if (other == null) {
      return;
    }
    if (other.CoordinateX != 0F) {
      CoordinateX = other.CoordinateX;
    }
    if (other.CoordinateY != 0F) {
      CoordinateY = other.CoordinateY;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 13: {
          CoordinateX = input.ReadFloat();
          break;
        }
        case 21: {
          CoordinateY = input.ReadFloat();
          break;
        }
      }
    }
  }

}

#endregion


#endregion Designer generated code
